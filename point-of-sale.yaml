openapi: 3.0.3
info:
  title: Point Of Sale
  description: This is API Specification for point of sale
  termsOfService: https://example.com/terms-of-service
  contact:
    name: Echo Edy P
    email: mailto:eep@gmail.com
  license:
    name: MIT
    url: https://github.com/EkoEdyPurwanto/point-of-sale/blob/main/LICENSE
  x-custom-filed: https://www.buymeacoffee.com/ekoedypurwanto
  version: 1.0.0
externalDocs:
  description: source code
  url: https://github.com/EkoEdyPurwanto/point-of-sale
servers:
  - url: 'https://{environment}.localhost:{port}/api/{basePath}'
    description: point of sale RESTfulAPi servers
    variables:
      environment:
        description: Server Environment
        default: development
        enum:
          - development
          - staging
          - production
      port:
        description: Port Number
        default: '1323'
        enum:
          - '1323'
          - '8443'
          - '443'
      basePath:
        description: Base Path
        default: v1
components:
  securitySchemes:
    PointOfSaleAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT authorization
  schemas:
    userAccount:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        password:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        accountStatus:
          type: string
          enum:
            - active
            - inactive
            - blocked
            - other
          default: aktif
        role:
          type: string
          enum:
            - admin
            - cashier
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    # REGISTER USER ACCOUNT jadikan identifier harus di isi salah satu: email or phone number
    registerUserAccount:
      type: object
      properties:
        identifier:
          type: object
          properties:
            email:
              type: string
              format: email
            phoneNumber:
              type: string
        role:
          type: string
        username:
          type: string
        password:
          type: string
        passwordConfirm:
          type: string
      required:
        - identifier
        - role
        - username
        - password
        - passwordConfirm
    # LOGIN USER ACCOUNT jadikan identifier harus di isi salah satu: username or email or phone number
    loginUserAccount:
      type: object
      properties:
        identifier:
          type: object
          properties:
            username:
              type: string
            email:
              type: string
              format: email
            phoneNumber:
              type: string
        password:
          type: string
paths:
  # REGISTER ADMIN
  /auth/register/admin:
    post:
      tags:
        - Auth
        - Admin
      summary: register admin
      description: create new user admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerUserAccount'
            examples:
              email:
                description: example register use email
                value:
                  identifier: user@example.com
                  username: user
                  role: admin
                  password: password123
                  passwordConfirm: password123
              phoneNumber:
                description: example register use email
                value:
                  identifier: 089653168345
                  username: user
                  role: admin
                  password: password123
                  passwordConfirm: password123
      responses:
        201:
          description: you have successfully registered as admin
        400:
          description: bad request
  # REGISTER CASHIER
  /auth/register:
    post:
      tags:
        - Auth
        - Cashier
      summary: register cashier
      description: create new user cashier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerUserAccount'
            examples:
              email:
                description: example register use email
                value:
                  identifier: user@mail.com
                  username: user
                  role: cashier
                  password: password123
                  passwordConfirm: password123
              phoneNumber:
                description: example register use email
                value:
                  identifier: 089653168345
                  username: user
                  role: cashier
                  password: password123
                  passwordConfirm: password123
      responses:
        201:
          description: you have successfully registered as cashier
        400:
          description: bad request
  # LOGIN ADMIN jadikan ketika admin berhasil login generate token
  /auth/login/admin:
    post:
      tags:
        - Auth
        - Admin
      summary: login admin
      description: login as admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUserAccount'
      responses:
        200:
          description: you have successfully login as admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authentication
                example:
                  token: your_generated_jwt_token_here
        401:
          description: unauthorized - invalid credential
        406:
          description: your account is inactive
  # LOGIN CASHIER
  /auth/login:
    post:
      tags:
        - Auth
        - Cashier
      summary: login cashier
      description: login as cashier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUserAccount'
      responses:
        200:
          description: you have successfully login as admin
        401:
          description: unauthorized - invalid credential
        406:
          description: your account is inactive
  # GET ALL USER CASHIER
  /user-management/cashier:
    get:
      security:
        - PointOfSaleAuth: [ ]
      tags:
        - Admin
      summary: get all user cashier
      description: retrieve all user cashier information
      responses:
        200:
          description: success retrieving all user cashier information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/userAccount'
              examples:
                success:
                  description: example success get all user cashier
                  value:
                    - id: randomstringbecauseuuid
                      username: user1
                      email: user1@example.com
                      phoneNumber: 08971641117
                      accountStatus: active
                      role: cashier
                      createdAt: 2022-02-20T10:00:00Z
                      updatedAt: 2022-02-20T10:00:00Z
                    - id: randomstringbecauseuuid
                      username: user2
                      email: user2@example.com
                      phoneNumber: 08971642217
                      accountStatus: blocked
                      role: cashier
                      createdAt: 2022-02-20T10:00:00Z
                      updatedAt: 2022-02-20T10:00:00Z
    # GET USER ACCOUNT BY SOMETHING, like id, username, role, email, phone number.
  # GET ALL USER ACCOUNT BY IDENTIFIER
  /user-management/user-account/{identifier}:
    get:
      security:
        - PointOfSaleAuth: [ ]
      tags:
        - Admin
      summary: Get user account by identifier
      description: Retrieve user account information based on the provided identifier (id, username, role, email, or phone number)
      parameters:
        - in: path
          name: identifier
          required: true
          description: Identifier of the user account (id, username, role, email, or phone number)
          schema:
            type: string
      responses:
        200:
          description: Success retrieving user user account information
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/userAccount'
                  - $ref: '#/components/schemas/userAccount'
              examples:
                successIdentifierByRole:
                  description: Example success retrieving user account information by role
                  value:
                    - id: randomstringbecauseuuid
                      username: user1
                      email: user1@example.com
                      phoneNumber: "08971641117"
                      accountStatus: active
                      role: cashier
                      createdAt: "2022-02-20T10:00:00Z"
                      updatedAt: "2022-02-20T10:00:00Z"
                    - id: randomstringbecauseuuid
                      username: user2
                      email: user2@example.com
                      phoneNumber: "08971642217"
                      accountStatus: active
                      role: cashier
                      createdAt: "2022-02-20T10:00:00Z"
                      updatedAt: "2022-02-20T10:00:00Z"
                successIdentifierByEmail:
                  description: Example success retrieving user account information by email
                  value:
                    id: randomstringbecauseuuid
                    username: user1
                    email: user1@example.com
                    phoneNumber: "08971641117"
                    accountStatus: active
                    role: cashier
                    createdAt: "2022-02-20T10:00:00Z"
                    updatedAt: "2022-02-20T10:00:00Z"
        404:
          description: User account with the provided identifier not found
